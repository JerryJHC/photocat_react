{"version":3,"sources":["ajax.js","Modal.js","Image.js","Gallery.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["ajax","method","url","header","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","this","status","response","getResponseHeader","statusText","onerror","send","Modal","cat","props","react_default","a","createElement","className","key","id","onClick","handler","src","alt","Component","Image","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loaded","setState","loading","show","hide","state","view","push","onLoad","src_Modal","Gallery","src_Image","cats","map","renderImage","Search","setCategories","_ref","asyncToGenerator","regenerator_default","mark","_callee","jsonString","wrap","_context","prev","next","categories","JSON","parse","searchCats","t0","console","log","stop","_x","apply","arguments","setCats","_ref2","_callee2","_context2","maxCats","parseInt","_x2","_callee3","category","searchURL","_context3","document","getElementById","selectedOptions","value","currentCategory","page","currentLimit","limit","catURL","replace","then","catch","setLimit","event","target","setPage","innerText","categoriesURL","name","pages","length","factor","startPage","i","Math","ceil","renderOption","onChange","src_Gallery","renderPageButtons","App","src_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5f0c038.chunk.js","sourcesContent":["function ajax(method, url, header) {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status < 300) {\r\n                if (header != null) {\r\n                    resolve([xhr.response , xhr.getResponseHeader(\"Pagination-Count\")]);\r\n                } else {\r\n                    resolve(xhr.response);\r\n                }\r\n            } else {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            reject({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        xhr.send();\r\n    });\r\n}\r\n\r\nexport default ajax;","import React, { Component } from 'react'\r\n\r\nclass Modal extends Component {\r\n\r\n    //Genera una galeria con cada imagen de la coleccion\r\n    render() {\r\n        let cat = this.props.cat;\r\n        return (\r\n            <div className=\"modal\" key={\"m_\" + cat.id}>\r\n                <span key={\"ms_\" + cat.id} className=\"close\" onClick={this.props.handler}>&times;</span>\r\n                <img className=\"modal-content\" key={\"mi_\" + cat.id} src={cat.url} alt={cat.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Modal from './Modal'\r\n\r\nclass Image extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            show: false\r\n        };\r\n    }\r\n\r\n    //Si la imagen se ha cargado marca el estado\r\n    loaded = () => {\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    //Muestra la imagen en un modal\r\n    show = () => {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    //Oculta el modla\r\n    hide = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    //Genera la vista de la imagen y el span si esta cargando la imagen\r\n    render() {\r\n        let cat = this.props.cat;\r\n        let view = [];\r\n        //Muestra un spinner para simular carga\r\n        if (this.state.loading) {\r\n            view.push(<span key={\"span_\" + cat.id} className=\"spinner-border text-warning\"></span>);\r\n        }\r\n        view.push(<img key={\"img_\"+cat.id} src={cat.url} alt={cat.id} onLoad={this.loaded} onClick={this.show} />);\r\n        if (this.state.show) {\r\n            view.push(<Modal key={\"Modal_\"+cat.id} cat={cat} handler={this.hide} />);\r\n        }\r\n        return view;\r\n    }\r\n}\r\n\r\nexport default Image;","import React, { Component } from 'react'\r\nimport Image from './Image'\r\n\r\nclass Gallery extends Component {\r\n\r\n    //Genera la imagen correspondiente\r\n    renderImage(cat) {\r\n        return (\r\n            <div key={cat.id} className=\"imageContainer d-flex justify-content-around align-content-between \">\r\n                <Image key={\"Image_\"+cat.id} cat={cat} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Genera una galeria con cada imagen de la coleccion\r\n    render() {\r\n        return (\r\n            <div key=\"gallery\" className=\"gallery d-flex justify-content-around flex-wrap\">\r\n                {this.props.cats.map(this.renderImage)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gallery;","import React, { Component } from 'react'\r\nimport ajax from './ajax'\r\nimport Gallery from './Gallery'\r\n\r\nclass Search extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      categories: [],\r\n      cats: [],\r\n      limit: 5,\r\n      page: 0,\r\n      currentLimit: 5,\r\n      currentCategory: 0,\r\n      loading: true,\r\n      maxCats: 0\r\n    }\r\n    //Hace la peticion al servidor en busca de las categorias\r\n    ajax('GET', categoriesURL).then(this.setCategories).catch(() => console.log(\"Error : AJAX CATEGORIES\"));\r\n  }\r\n\r\n  //recibe el JSON de categorias y coloca loading a false para mostrar el buscador\r\n  setCategories = async (jsonString) => {\r\n    try {\r\n      await this.setState({ categories: JSON.parse(jsonString), loading: false });\r\n      await this.searchCats(); // First search\r\n    } catch{\r\n      console.log(\"Error: Parse JSON\");\r\n    }\r\n  }\r\n\r\n  //recibe el JSON con los gatos de la API y genera la coleccion\r\n  setCats = async (response) => {\r\n    try {\r\n      if (this.state.maxCats !== response[1]) {\r\n        await this.setState({ maxCats: parseInt(response[1]) });\r\n      }\r\n      this.setState({ cats: JSON.parse(response[0]) });\r\n    } catch{\r\n      console.log(\"Error: Parse JSON\");\r\n    }\r\n  }\r\n\r\n  //Realiza la busqueda de la categoria y con el limite seleccionado\r\n  searchCats = async () => {\r\n    let category = document.getElementById(\"categories\").selectedOptions[0].value;\r\n    //Si la catergoria es diferente a la anterior busqueda utiliza la pagina 0\r\n    if (this.state.currentCategory !== category) {\r\n      await this.setState({ currentCategory: category, page: 0 });\r\n    }\r\n    //Si el limite es distinto al de la anterior busqueda utiliza la pagina 0\r\n    if (this.state.currentLimit !== this.state.limit) {\r\n      await this.setState({ currentLimit: this.state.limit, page: 0 });\r\n    }\r\n    //Genera la uri y realiza la peticion de imagenes\r\n    let searchURL = catURL.replace('<limit>', this.state.limit).replace('<page>', this.state.page).replace('<category>', category);\r\n    ajax('GET', searchURL, true).then(this.setCats).catch(() => console.log(\"Error : AJAX CATS\"));\r\n  }\r\n\r\n  //Genera el option de cada categoria\r\n  renderOption(category) {\r\n    return (\r\n      <option key={category.id} value={category.id}>{category.name}</option>\r\n    );\r\n  }\r\n\r\n  //Selecciona el limite nuevo de imagenes\r\n  setLimit = (event) => {\r\n    this.setState({ limit: event.target.selectedOptions[0].value });\r\n  }\r\n\r\n  //Asigna la pagina a utilizar y realiza una nueva busqueda\r\n  setPage = (event) => {\r\n    let page = this.state.page;\r\n    if (event.target.id === 'next') {\r\n      page++;\r\n    } else if (event.target.id === 'prev') {\r\n      page = page > 0 ? page - 1 : page;\r\n    } else {\r\n      page = parseInt(event.target.innerText) - 1;\r\n    }\r\n    this.setState({ page: page }, this.searchCats);\r\n  }\r\n\r\n  //Genera los botones  de las paginas, anterior y siguiente\r\n  renderPageButtons() {\r\n    let pages = [];\r\n    if (this.state.cats.length > 0 || this.state.page > 0) {\r\n      //Si es la primera pagina no muestra el boton de anterior\r\n      if (this.state.page > 0) {\r\n        pages.push(<button id=\"prev\" key=\"prev\" onClick={this.setPage} className=\"btn btn-info\">Anterior</button>);\r\n      }\r\n      let factor = this.state.maxCats / this.state.limit > 5 ? 5 : this.state.maxCats / this.state.limit;\r\n      let startPage = this.state.page < factor ? 1 : this.state.page - 3;\r\n      for (let i = startPage; i < startPage + factor; i++) pages.push(<button key={i} onClick={this.setPage} className={this.state.page + 1 === i ? \"btn btn-success\" : \"btn btn-link\"}>{i}</button>);\r\n      //Si es la ultima pagina no muestra el boton de siguiente\r\n      if (this.state.page + 1 < this.state.maxCats / this.state.limit) {\r\n        pages.push(<button id=\"next\" key=\"next\" onClick={this.setPage} className=\"btn btn-info\">Siguiente</button>);\r\n      }\r\n      //Informacion de las paginas\r\n      pages.push(<div key=\"page-info\" className=\"page-info\">Mostrando página {this.state.page + 1} de {Math.ceil(this.state.maxCats / this.state.currentLimit)}</div>);\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    //Si esta cargando las categorias muestra un spinner\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"center-block\">\r\n          <span key=\"loading\" className=\"spinner-grow text-warning m-5\"></span>\r\n        </div>\r\n      );\r\n    } else {\r\n      //Si esta todo correcto mostrara los desplegables, el boton y la galeria\r\n      return (\r\n        <div>\r\n          <span>Categories</span>\r\n          <select id=\"categories\">\r\n            {this.state.categories.map(this.renderOption)}\r\n          </select>\r\n          <button onClick={this.searchCats} className=\"btn btn-primary\">Search</button>\r\n          <span>Limit</span>\r\n          <select id=\"limits\" onChange={this.setLimit}>\r\n            <option>5</option>\r\n            <option>10</option>\r\n            <option>20</option>\r\n          </select>\r\n          <Gallery cats={this.state.cats} />\r\n          <div className=\"pages d-flex justify-content-center\">\r\n            {this.renderPageButtons()}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n//URLs y maximo de gatos\r\nconst categoriesURL = 'https://my-json-server.typicode.com/JerryJHC/DBJsonServer/categories';\r\nconst catURL = 'https://api.thecatapi.com/v1/images/search?api_key=98d6679f-e35f-4cbc-8a91-85f3e93af700&limit=<limit>&page=<page>&order=Desc&category_ids=<category>';\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport Search from './Search'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Search />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}